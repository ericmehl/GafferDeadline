#---------------------------------#
#      general configuration      #
#---------------------------------#

# Maximum number of concurrent jobs for the project
max_jobs: 1

#---------------------------------#
#    environment configuration    #
#---------------------------------#

# Build worker image (VM template)
image: Visual Studio 2017

# clone directory
clone_folder: c:\GafferDeadline_source

# environment variables
environment:
  BUILD_DIR: c:\GafferDeadline_build
  DEADLINE_DEPENDENCY_SCRIPT_PATH: '%APPVEYOR_BUILD_FOLDER%'
  GAFFER_ROOT: '%BUILD_DIR%'
  PATH: '%GAFFER_ROOT%;%GAFFER_ROOT%/bin;%GAFFER_ROOT%/python;%GAFFER_ROOT%/lib;%PATH%'
  PYTHONHOME: '%GAFFER_ROOT%'
  PYTHONPATH: '%GAFFER_ROOT%\python;%APPVEYOR_BUILD_FOLDER%\python'
  IECORE_FONT_PATHS: '%GAFFER_ROOT%\fonts'
  QT_OPENGL: desktop
  QT_QPA_PLATFORM_PLUGIN_PATH: '%GAFFER_ROOT%\qt\plugins'
  DEPENDENCY_VERSION: 0.52.0.0.283
  APPVEYOR_SAVE_CACHE_ON_ERROR: true

# uncomment this line to enable RDP access at the start of the build
# init:
  # - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

# build cache to preserve files/folders between builds
# cache:
#   - sconsCache

# scripts that run after cloning repository
install:
    # download and extract dependencies
  - if not exist %BUILD_DIR% mkdir %BUILD_DIR%
  - cd %BUILD_DIR%
  - appveyor DownloadFile https://github.com/hypothetical-inc/gaffer/releases/download/0.52.0.0-beta/Gaffer_Windows_Gaffer_%DEPENDENCY_VERSION%_artifacts.zip
  - 7z x Gaffer_Windows_Gaffer_%DEPENDENCY_VERSION%_artifacts.zip -aoa -y
  - del Gaffer_Windows_Gaffer_%DEPENDENCY_VERSION%_artifacts.zip
  # Install pip
  - ps: >-
      $pip_url = 'https://bootstrap.pypa.io/get-pip.py'

      $pip_output = "$($env:GAFFER_ROOT)\get-pip.py"

      [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12

      Invoke-WebRequest $pip_url -Out $pip_output

      Invoke-Expression "$($env:GAFFER_ROOT)\bin\python.exe $pip_output"
  - python -m pip install mock --target=%GAFFER_ROOT%\python
  - cd %APPVEYOR_BUILD_FOLDER%\python
  - python -m unittest discover -p "*Test.py"  # clean up Scons cache

  # to run script as a PowerShell command prepend it with ps:
  # - ps: Write-Host 'This is PowerShell'

#---------------------------------#
#       build configuration       #
#---------------------------------#

# build platform, i.e. x86, x64, Any CPU. This setting is optional.
platform: x64

# build Configuration, i.e. Debug, Release, etc.
configuration: Release

# scripts to run *after* solution is built and *before* automatic packaging occurs (web apps, NuGet packages, Azure Cloud Services)
# before_package:

# the install step takes care of everything since we're using cmake
build: off

#---------------------------------#
#      artifacts configuration    #
#---------------------------------#

# artifacts:
#   # pushing a single file
#   - path: test.zip

#   # pushing a single file with environment variable in path and "Deployment name" specified
#   - path: MyProject\bin\$(configuration)
#     name: myapp

#   # pushing entire folder as a zip archive
#   - path: logs

#   # pushing all *.nupkg files in build directory recursively
#   - path: '**\*.nupkg'

