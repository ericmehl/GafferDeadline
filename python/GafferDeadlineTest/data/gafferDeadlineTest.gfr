import Gaffer
import GafferDispatch
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerNodeValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:majorVersion", 45, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerNodeValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "imageCataloguePort", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.StringPlug( "name", defaultValue = 'image:catalogue:port', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectName", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:name', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectName"].addChild( Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "projectRootDirectory", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "name", defaultValue = 'project:rootDirectory', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["projectRootDirectory"].addChild( Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["member1"].addChild( Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["member1"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["PythonCommand"] = GafferDispatch.PythonCommand( "PythonCommand" )
parent.addChild( __children["PythonCommand"] )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"] = GafferDispatch.PythonCommand( "PythonCommand1" )
parent.addChild( __children["PythonCommand1"] )
__children["PythonCommand1"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"] = GafferDispatch.TaskList( "TaskList" )
parent.addChild( __children["TaskList"] )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["postTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "postTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskList"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"] = GafferDispatch.PythonCommand( "PythonCommand2" )
parent.addChild( __children["PythonCommand2"] )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"] = GafferDispatch.PythonCommand( "PythonCommand3" )
parent.addChild( __children["PythonCommand3"] )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline4", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline5", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"]["dispatcher"].addChild( Gaffer.Plug( "deadline6", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PythonCommand3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"] = GafferDispatch.TaskContextVariables( "TaskContextVariables" )
parent.addChild( __children["TaskContextVariables"] )
__children["TaskContextVariables"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["variables"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["variables"]["member1"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"]["variables"]["member1"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"] = GafferDispatch.TaskContextVariables( "TaskContextVariables1" )
parent.addChild( __children["TaskContextVariables1"] )
__children["TaskContextVariables1"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["dispatcher"].addChild( Gaffer.Plug( "deadline2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["variables"].addChild( Gaffer.CompoundDataPlug.MemberPlug( "member1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["variables"]["member1"].addChild( Gaffer.StringPlug( "name", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["variables"]["member1"].addChild( Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"]["variables"]["member1"].addChild( Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TaskContextVariables1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"] = GafferDispatch.FrameMask( "FrameMask" )
parent.addChild( __children["FrameMask"] )
__children["FrameMask"]["preTasks"].addChild( GafferDispatch.TaskNode.TaskPlug( "preTask1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"]["dispatcher"].addChild( Gaffer.Plug( "deadline", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"]["dispatcher"].addChild( Gaffer.Plug( "deadline1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["FrameMask"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 63850 )
parent["variables"]["member1"]["name"].setValue( 'changeset' )
parent["variables"]["member1"]["value"].setValue( 49 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["PythonCommand"]["dispatcher"]["batchSize"].setValue( 10 )
__children["PythonCommand"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand"]["command"].setValue( 'print "task1 {}".format(context["frame"])' )
__children["PythonCommand"]["__uiPosition"].setValue( imath.V2f( -9.13885307, -11.8646297 ) )
__children["PythonCommand1"]["preTasks"]["preTask0"].setInput( __children["PythonCommand"]["task"] )
__children["PythonCommand1"]["dispatcher"]["batchSize"].setValue( 5 )
__children["PythonCommand1"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand1"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand1"]["command"].setValue( 'print "task2 {}".format(context["frame"])' )
__children["PythonCommand1"]["__uiPosition"].setValue( imath.V2f( -8.44070244, -20.0287018 ) )
__children["TaskList"]["preTasks"]["preTask0"].setInput( __children["PythonCommand1"]["task"] )
__children["TaskList"]["preTasks"]["preTask1"].setInput( __children["FrameMask"]["task"] )
__children["TaskList"]["preTasks"]["preTask2"].setInput( __children["TaskContextVariables1"]["task"] )
__children["TaskList"]["postTasks"]["postTask0"].setInput( __children["PythonCommand3"]["task"] )
__children["TaskList"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["TaskList"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TaskList"]["__uiPosition"].setValue( imath.V2f( 8.68742371, -49.6018524 ) )
__children["PythonCommand2"]["dispatcher"]["batchSize"].setValue( 10 )
__children["PythonCommand2"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand2"]["dispatcher"]["deadline"]["limits"].setValue( 'vray' )
__children["PythonCommand2"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Archive' )
__children["PythonCommand2"]["command"].setValue( 'print "task3 {}: {}".format(context["frame"], context["variation"])\n' )
__children["PythonCommand2"]["__uiPosition"].setValue( imath.V2f( 25.0260391, -3.909657 ) )
__children["PythonCommand3"]["dispatcher"]["deadline"]["group"].setValue( 'workstation' )
__children["PythonCommand3"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["PythonCommand3"]["command"].setValue( 'print "frame: {}".format(context["frame"])' )
__children["PythonCommand3"]["__uiPosition"].setValue( imath.V2f( 44.4874077, -34.3202438 ) )
__children["TaskContextVariables"]["preTasks"]["preTask0"].setInput( __children["PythonCommand2"]["task"] )
__children["TaskContextVariables"]["dispatcher"]["batchSize"].setValue( 2 )
__children["TaskContextVariables"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TaskContextVariables"]["variables"]["member1"]["name"].setValue( 'variation' )
__children["TaskContextVariables"]["variables"]["member1"]["value"].setValue( 'blue' )
__children["TaskContextVariables"]["__uiPosition"].setValue( imath.V2f( 12.5253887, -17.8737144 ) )
__children["TaskContextVariables1"]["preTasks"]["preTask0"].setInput( __children["PythonCommand2"]["task"] )
__children["TaskContextVariables1"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["TaskContextVariables1"]["variables"]["member1"]["name"].setValue( 'variation' )
__children["TaskContextVariables1"]["variables"]["member1"]["value"].setValue( 'red' )
__children["TaskContextVariables1"]["__uiPosition"].setValue( imath.V2f( 31.5277596, -17.9557514 ) )
__children["FrameMask"]["preTasks"]["preTask0"].setInput( __children["TaskContextVariables"]["task"] )
__children["FrameMask"]["dispatcher"]["deadline"]["onJobComplete"].setValue( 'Nothing' )
__children["FrameMask"]["mask"].setValue( '1-15' )
__children["FrameMask"]["__uiPosition"].setValue( imath.V2f( 12.5253887, -28.0377827 ) )


del __children

